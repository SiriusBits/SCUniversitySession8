----item----
version: 1
id: {F8448BA4-D0E7-482B-BD7B-3CF1AA3CA12D}
database: master
path: /sitecore/system/Modules/PowerShell/Script Library/Platform/Internal/Context Help/Command Help
parent: {2BFAEECA-8BDF-45F3-AA79-AC85D8DFB7A4}
name: Command Help
master: {00000000-0000-0000-0000-000000000000}
template: {DD22F1B3-BD87-4DB2-9E7D-F7A496888D43}
templatekey: PowerShell Script

----field----
field: {B1A94FF0-6897-47C0-9C51-AA6ACB80B1F0}
name: Script
key: script
content-length: 5264

#Based on http://poshcode.org/1612
function FixString {
  param($in = '')
  if ($in -eq $null) {
    $in = ''
  }
  return $in.Trim().Trim('\n').Replace('&', '&amp;').Replace('<', '&lt;').Replace('>', '&gt;').Replace("`n","<br/>")
}

function FixExampleString {
  param($in = '')
  if ($in -eq $null) {
    $in = ''
  }
  return $in.Trim().Replace('&', '&amp;').Replace('<', '&lt;').Replace('>', '&gt;').Replace("`n","<br/>")
}

if($helpFor -eq $null){
    $helpFor = "Get-Item"
}

$c = get-help $helpFor -full

$alias = "";
get-alias | where-object { $_.Definition -eq "$helpFor" } | % { $alias += "<li>$($_.Name)</li>" } | out-null

"<h1 class='title'>$($c.Name)</h1><div>$($c.synopsis)</div>"

if ($alias.Length -gt 0) 
{
    "<h2>Aliases</h2>
    <p>The following abbreviations are aliases for this cmdlet:</p><ul>$alias</ul>"
}

"<h2>Syntax</h2><div class='codeSnippetContainerCodeContainer'><div class='codeSnippetContainerCode'><code>"
foreach($syntax in $c.syntax.syntaxItem)
{
    "<p><i><b>$($syntax.Name)</b></i>"
    foreach($param in $syntax.parameter){
        Write-host -NoNewline " "
        if($param.required -eq "false"){
            Write-host -NoNewline "["
        }
        if($param.position -ne "named"){
            Write-host -NoNewline "[-$($param.Name)]"
        } else {
            Write-host -NoNewline "-$($param.Name)"
        }
        if($param.parameterValue -ne $null -and $param.parameterValue -ne "SwitchParameter"){
            Write-host -NoNewline " &lt;$($param.parameterValue)&gt;"
        }
        if($param.required -eq "false"){
            Write-host -NoNewline "] "
        }
    }
    "</p>"
}
  "</code></div></div>"
  "<h2> Detailed Description </h2>"

foreach($Description in $c.Description){
    "<p>$(FixString($Description | out-string -width 20000))</p>"
}
 
# Parameters
"<h2>Parameters</h2>"
foreach ($param in $c.parameters.parameter ) 
{
    "<h3>-$($param.Name)&nbsp; &lt;$($param.type.Name)&gt;</h3>"
    foreach($Description in $param.Description){
        "<p>$(FixString($Description | out-string -width 2000))</p>"
    }
    "<table>
    <tr><td>Aliases</td><td>$($param.Aliases)</td></tr>
    <tr><td>Required?</td><td>$($param.Required)</td></tr>
    <tr><td>Position?</td><td>$($param.Position)</td></tr>
    <tr><td>Default Value</td><td>$($param.DefaultValue)</td></tr>
    <tr><td>Accept Pipeline Input?</td><td>$($param.PipelineInput)</td></tr>
    <tr><td>Accept Wildcard Characters?</td><td>$($param.Globbing)</td></tr>
    </table>"
}

# Input Type
if (($c.inputTypes | Out-String ).Trim().Length -gt 0) 
{
    "<h2>Inputs</h2>
    <div>The input type is the type of the objects that you can pipe to the cmdlet.</div>
    <ul><li><b>$(FixString($c.inputTypes.inputType.type.name  | out-string  -width 2000))</b><br/>
    $(FixString($c.inputTypes.inputType.description  | out-string  -width 2000))</li></ul>"
}
   
# Return Type
if (($c.returnValues | Out-String ).Trim().Length -gt 0) 
{
    "<h2>Outputs</h2>
    <div>The output type is the type of the objects that the cmdlet emits.</div><ul>"
    foreach($returnValue in $c.returnValues.returnValue){
        "<li><b>$(FixString($returnValue.type.name  | out-string  -width 2000))</b><br/>
        $(FixString($returnValue.description.Text  | out-string  -width 2000))</li>"
    }
    "</ul>"
}
         
         
# Notes
if (($c.alertSet | Out-String).Trim().Length -gt 0) 
{
    "<h2> Notes </h2>"
    foreach($alert in $c.alertSet.alert){
        "<p>$(FixString($alert | out-string))</p>"
    }
}

# Examples
if (($c.examples | Out-String).Trim().Length -gt 0) 
{
    "<h2> Examples </h2>"
    foreach ($example in $c.examples.example) 
    {
        "<h3> $(FixString($example.title.Trim(('-',' '))))</h3>
        <div class='example-description'>$(FixString($example.remarks | out-string -Width 2000).Trim())</div>
        <div class='codeSnippetContainerCodeContainer'><div class='codeSnippetContainerCode'>
        <pre>$(FixExampleString($example.code))</pre></div></div>"
    }
}

#Related Topics
"<h2>Related Topics</h2><div>"

foreach ($relatedLink in $c.relatedLinks.navigationLink) {
    if($relatedLink.linkText -ne $null -and $relatedLink.linkText.StartsWith('about') -eq $false)
    {
        if($relatedLink.uri -eq $null -or $relatedLink.uri -eq ''){
           if($relatedLink.linkText -match 'http'){
             $url = $relatedLink.linkText | select-string -pattern '\b(?:(?:https?|ftp|file)://|www\.|ftp\.)(?:\([-A-Z0-9+&@#/%=~_|$?!:,.]*\)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:\([-A-Z0-9+&@#/%=~_|$?!:,.]*\)|[A-Z0-9+&@#/%=~_|$])' | % { $_.Matches } | % { $_.Value } | select -first 1
             "* <a href='$url' target='_blank'>$($relatedLink.linkText)</a><br/>"
           } else {
             $internalCommand = '"'+$relatedLink.linkText+'"'
             "* <a href='#' onclick='javascript:return cognifide.powershell.showCommandHelp($internalCommand);'>$($relatedLink.linkText)</a><br/>"
           }
        } else {
            "* <a href='$($relatedLink.uri)' target='_blank'>$($relatedLink.linkText) $($relatedLink.uri)</a><br/>"
        }
    }
}
"</div>"
----version----
language: en
version: 1
revision: de7343b3-33de-4c72-92e2-104f292c8988

----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 15

20130929T124539
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

de7343b3-33de-4c72-92e2-104f292c8988
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 34

20150118T162441:635571950810926328
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
