----item----
version: 1
id: {49C76CD6-5D9F-45B3-8799-84B9D0E59C1C}
database: master
path: /sitecore/system/Modules/PowerShell/Script Library/Content Reports/Reports/Content Audit/Broken Links
parent: {66D85BC1-4DC1-4172-94C0-FD6CD5D8E47A}
name: Broken Links
master: {00000000-0000-0000-0000-000000000000}
template: {DD22F1B3-BD87-4DB2-9E7D-F7A496888D43}
templatekey: PowerShell Script

----field----
field: {B1A94FF0-6897-47C0-9C51-AA6ACB80B1F0}
name: Script
key: script
content-length: 5536

<#
    .SYNOPSIS
        Lists the items with broken links searching all or the latest version in the current language.
        
    .NOTES
        Adam Najmanowicz, Michael West, Daniel Scherrer
        Adapted from the Advanced System Reporter module & Daniel Scherrer's external links checker: 
        https://gist.github.com/daniiiol/143db3e2004afe9a55c1dd3e33048940
#>

$database = "master"
$root = Get-Item -Path (@{$true="$($database):\content\home"; $false="$($database):\content"}[(Test-Path -Path "$($database):\content\home")])
$linksToCheck =  @("internal","external")
$linkTypes = [ordered]@{"Internal Links"="internal";"External Links"="external"};

$versionOptions = [ordered]@{
    "Latest"="1"
}

$props = @{
    Parameters = @(
        @{Name="root"; Title="Choose the report root"; Tooltip="Only items in this branch will be returned."; Columns=9},
        @{Name="searchVersion"; Value="1"; Title="Version"; Options=$versionOptions; Tooltip="Choose a version."; Columns="3"; Placeholder="All"},
        @{Name="linksToCheck"; Title="Link types to check"; Options=$linkTypes; Tooltip="which link types you want to check"; Editor="checklist"} 
    )
    Title = "Broken Links Report"
    Description = "Choose the criteria for the report."
    Width = 550
    Height = 300
    ShowHints = $true
}

$result = Read-Variable @props

if($result -eq "cancel"){
    exit
}

filter HasBrokenLink {
    param(
        [Parameter(Mandatory=$true,ValueFromPipeline=$true)]
        [Sitecore.Data.Items.Item]$Item,
        
        [Parameter()]
        [bool]$IncludeAllVersions
    )
    
    if($Item) {
        if($linksToCheck.Contains("internal")){
            $brokenLinks = $item.Links.GetBrokenLinks($IncludeAllVersions)
            if($brokenlinks -ne $null -and $brokenlinks.Length -gt 0) {
                foreach($brokenLink in $brokenLinks) {
                    $brokenItem = $brokenLink.GetSourceItem() | Initialize-Item
                    Add-Member -InputObject $brokenItem -NotePropertyName "Broken Link Field" -NotePropertyValue ((Get-Item . -Database ($root.Database) -ID $brokenLink.SourceFieldID).Name)
                    Add-Member -InputObject $brokenItem -NotePropertyName "Target Url" -NotePropertyValue $brokenLink.TargetPath
                    Add-Member -InputObject $brokenItem -NotePropertyName "Status Code" -NotePropertyValue "Missing Target Item"
                    $brokenItem
                }
            }
        }
        
        if($linksToCheck.Contains("external")){
            if($IncludeAllVersions){
                $allItems = Get-Item "$($item.Database.Name):" -Version * -Language * -Id $item.Id
            } else {
                $allItems = @(Get-Item "$($item.Database.Name):" -Language * -Id $item.Id)
            }
            foreach($checkedItem in $allItems){
                foreach($field in $checkedItem.Fields) {
                    if ($field.Type -eq 'General Link' -and $field.Value -like '*linktype="external"*') { 
                        $found = $field.Value -match '.*url="(.*?)".*'
                        if($found) {
                            $url = $matches[1]
                        }
                        
                        try{ 
                            $response = Invoke-WebRequest $url -UseBasicParsing -method head
                        } 
                        catch {
                            $statuscode = $_.Exception.Response.StatusCode.Value__
                            
                            if(!$statuscode) {
                                $statuscode = "Not reachable"
                            }
                            
                            $brokenItem = Get-Item "$($item.Database.Name):" -Version $checkedItem.Version -Language $checkedItem.Language -Id $checkedItem.Id
                            Add-Member -InputObject $brokenItem -NotePropertyName "Broken Link Field" -NotePropertyValue ($field.Name)
                            Add-Member -InputObject $brokenItem -NotePropertyName "Target Url" -NotePropertyValue $url
                            Add-Member -InputObject $brokenItem -NotePropertyName "Status Code" -NotePropertyValue $statuscode
                            $brokenItem
                        }
                    }
                }
            }
        }
    }
}

$items = Get-ChildItem -Path $root.ProviderPath -Recurse | HasBrokenLink -IncludeAllVersions (!$searchVersion)

if($items.Count -eq 0){
    Show-Alert "There are no items found which have broken links in the current language."
} else {
    $props = @{
        Title = "Broken links report"
        InfoTitle = "$($items.Count) items with broken links found!"
        InfoDescription = "The report checked for $($linksToCheck -join ' & ') links in $(@('all versions','latest versions')[[byte]($searchVersion='1')]) of items."
        MissingDataMessage = "There are no items found which have broken links in the current language."
        PageSize = 25
    }
        
    $items |
        Show-ListView @props -Property "Status Code", "Broken Link Field","Target Url",
            @{Label="Name"; Expression={$_.DisplayName} },
            @{Label="Path"; Expression={$_.ItemPath} },
            "Version",
            "Language",
            @{Label="Updated"; Expression={$_.__Updated} },
            @{Label="Updated by"; Expression={$_."__Updated by"} }
}
Close-Window
----field----
field: {06D5295C-ED2F-4A54-9BF2-26228D113318}
name: __Icon
key: __icon
content-length: 29

Network/32x32/link_delete.png
----version----
language: en
version: 1
revision: 5c535ea7-f095-46d2-b974-bd8322879b02

----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 15

20140410T212339
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

5c535ea7-f095-46d2-b974-bd8322879b02
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 15

20161016T224450
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
