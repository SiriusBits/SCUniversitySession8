----item----
version: 1
id: {F42F88F8-76FB-4158-8ACD-CD57722C0351}
database: master
path: /sitecore/system/Modules/PowerShell/Script Library/Platform/Functions/Invoke-ApiScript
parent: {E22D066A-04D0-4799-9DAD-EDD9EB07C2B2}
name: Invoke-ApiScript
master: {00000000-0000-0000-0000-000000000000}
template: {DD22F1B3-BD87-4DB2-9E7D-F7A496888D43}
templatekey: PowerShell Script

----field----
field: {B1A94FF0-6897-47C0-9C51-AA6ACB80B1F0}
name: Script
key: script
content-length: 5164

<#
    .SYNOPSIS
        Invokes a scriptblock with the specified arguments and returns a JSON object.
        
    .DESCRIPTION
        The Invoke-ApiScript command invokes a scriptblock with the specified arguments and returns a JSON object.
        The response includes a status, message, timespan, timestamp, and results.
        
    .PARAMETER ScriptBlock
        Scriptblock containing the code to execute on the server.
        
    .PARAMETER Arguments
        Hashtable containing arguments for the command and the scriptblock. The hashtable can be accessed from within the scriptblock using $args.
        
        Supported arguments by the Invoke-ApiScript include:
        
        - limit = The number of results to return.
        - offset = The number of items to skip before returning results based on the limit.
        - fields = The comma separated list of property names that indicated what object properties should be included in the JSON object.
        - compress = The JSON object is compressed such that the unncessary whitespace is removed; beneficial when running remotely.
        
        The hashtable is also passed to the scriptblock and can be accessed using the $args object.
        
    .EXAMPLE
        The following invokes a scriptblock and wraps the results in a nicely formatted JSON object.
        
        PS master:\> Import-Function Invoke-ApiScript
        PS master:\> Invoke-ApiScript -ScriptBlock { 
            @(Get-Item -Path master:\content\home) + @(Get-ChildItem -Path master:\content\home -Recurse)
        } -Arguments @{limit=2;fields="name","id"}
        
        
        JSON output:
                
        {
            "Status":  "Success",
            "Message":  "The request completed successfully.",
            "Timespan":  "0:00:00.057338",
            "Timestamp":  "2015-07-12T03:19:17.9633436-05:00",
            "Results":  [
                            {
                                "Name":  "Home",
                                "ID":  "{110D559F-DEA5-42EA-9C1C-8A5DF7E70EF9}"
                            },
                            {
                                "Name":  "sample item 1",
                                "ID":  "{39A657C0-103A-4EDD-89C6-D0C3AFACA192}"
                            }
                        ]
        }
        
    .EXAMPLE
        Import-Function Invoke-ApiScript
        Invoke-ApiScript -ScriptBlock { 
            $args.customProperty2
        } -Arguments @{compress=$true;customProperty1=$false;customProperty2="SPE"}
        
        
        JSON output:
        
        {"Status":"Success","Message":"The request completed successfully.","Timespan":"0:00:00.0068324","Timestamp":"2015-07-14T16:39:31.1988765-05:00","Results":"SPE"}        
    
    .LINK
        http://blog.najmanowicz.com/2015/04/13/rapid-api-prototyping-for-sitecore-with-powershell-extensions/
        
    .NOTES
        Michael West
#>

$HttpContext = [System.Web.HttpContext]::Current;
if ($HttpContext){
    $HttpContext.Response.ContentType = "application/json";
}

function Invoke-ApiScript {
    param(
        [Parameter(Mandatory=$true, Position=0)]
        [scriptblock]$ScriptBlock,
        
        [Parameter()]
        [hashtable]$Arguments
    )
    
    $status = "Success"
    $message = "The request completed successfully."
    $error = $null
    
    $fields = "*"
    $offset = 0
    $limit = 0
    $compress = $false
    
    if($Arguments) {
        if($Arguments["fields"]) {
            $fields = $Arguments["fields"].Trim('(',')').Split(',')
        }
        
        if($Arguments["offset"]) {
            [int]::TryParse($Arguments["offset"], [ref]$offset) | Out-Null
        }
        
        if($Arguments["limit"]) {
            [int]::TryParse($Arguments["limit"], [ref]$limit) | Out-Null
        }
        
        if($Arguments["compress"]) {
            [bool]::TryParse($Arguments["compress"], [ref]$compress) | Out-Null
        }
    }
    
    $watch = New-Object System.Diagnostics.Stopwatch
    $watch.Start()
    
    try {
        $items = Invoke-Command -ScriptBlock $ScriptBlock -ArgumentList ([PSCustomObject]$Arguments)        
    } catch {
        $status = "Failed"
        $message = "There was an error while executing the script."
        $error = "Error at line:$($_.InvocationInfo.ScriptLineNumber), char:$($_.InvocationInfo.OffsetInLine). " + $_.Exception.Message
    }

    $watch.Stop()
    
    if($fields -gt 0) {
        $items = $items | Select-Object -Property $fields
    }
    
    if($offset -gt 0) {
        $items = $items | Select-Object -Skip $offset
    }
    
    if($limit -gt 0) {
        $items = $items | Select-Object -First $limit
    }
    
    [ordered]@{
        Status = $status
        Message = $message
        Timespan = $watch.Elapsed.ToString("g")
        Timestamp = [datetime]::UtcNow.ToString("yyyy-MM-ddTHH\:mm\:ss.fffffffzzz")
        Results = $items
        Error = $error
    } | ConvertTo-Json -Compress:$compress
}
----field----
field: {BA3F86A2-4A1C-4D78-B63D-91C2779C1B5E}
name: __Sortorder
key: __sortorder
content-length: 3

650
----version----
language: en
version: 1
revision: 681d02fe-b12a-43e2-a91c-1d9c085966b7

----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 15

20150420T012927
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

681d02fe-b12a-43e2-a91c-1d9c085966b7
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 15

20151231T165452
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
